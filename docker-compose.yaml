version: "3.3"

services:
  regional-sul:
    depends_on:
      - kafka
    hostname: regional-sul
    image: imagem-base-simulador:0.0.1
    container_name: regional_sul
    ports:
      - "8881:8888"
    environment:
      - REGIAO=Sul
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-sul:8888/healthcheck || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  regional-sudeste:
    depends_on:
      - kafka
    hostname: regional-sudeste
    image: imagem-base-simulador:0.0.1
    container_name: regional_sudeste
    ports:
      - "8882:8888"
    environment:
      - REGIAO=Sudeste
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-sudeste:8888/healthcheck || exit 1
      interval: 20s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  regional-centro-oeste:
    depends_on:
      - kafka
    hostname: regional-centro-oeste
    image: imagem-base-simulador:0.0.1
    container_name: regional_centro_oeste
    ports:
      - "8883:8888"
    environment:
      - REGIAO=Centro_Oeste
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-centro-oeste:8888/healthcheck || exit 1
      interval: 25s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  regional-nordeste:
    depends_on:
      - kafka
    hostname: regional-nordeste
    image: imagem-base-simulador:0.0.1
    container_name: regional_nordeste
    ports:
      - "8884:8888"
    environment:
      - REGIAO=Nordeste
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-nordeste:8888/healthcheck || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  regional-norte:
    depends_on:
      - kafka
    hostname: regional-norte
    image: imagem-base-simulador:0.0.1
    container_name: regional_norte
    ports:
      - "8885:8888"
    environment:
      - REGIAO=Norte
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-norte:8888/healthcheck || exit 1
      interval: 35s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  motor-analise-credito:
    depends_on:
      - kafka
    hostname: motor-analise-credito
    image: imagem-base-simulador:0.0.1
    container_name: motor-analise-credito
    ports:
      - "8889:8888"
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://motor-analise-credito:8888/healthcheck-motor || exit 1
      interval: 35s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - rede-analise-credito
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      resources:
        limits:
          memory: 2G
  kafka:
    depends_on:
      - zookeeper
    image: docker.io/bitnami/kafka:3.4
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    networks:
      - rede-analise-credito
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes # Remove criptografia (sem SSL/TLS)
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true # Permite criar t√≥picos somente enviando mensagens
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
    deploy:
      resources:
        limits:
          memory: 2G

volumes:
  zookeeper_data:
  kafka_data:

networks:
  rede-analise-credito:
    driver: bridge
