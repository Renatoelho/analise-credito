version: "3.3"

services:
  regional-sul:
    depends_on:
      - kafka
    hostname: regional-sul
    image: imagem-base-simulador:0.0.1
    container_name: regional_sul
    ports:
      - "8881:8888"
    environment:
      - REGIAO=Sul
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-sul:8888/healthcheck-regionais || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  regional-sudeste:
    depends_on:
      - kafka
    hostname: regional-sudeste
    image: imagem-base-simulador:0.0.1
    container_name: regional_sudeste
    ports:
      - "8882:8888"
    environment:
      - REGIAO=Sudeste
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-sudeste:8888/healthcheck-regionais || exit 1
      interval: 20s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  regional-centro-oeste:
    depends_on:
      - kafka
    hostname: regional-centro-oeste
    image: imagem-base-simulador:0.0.1
    container_name: regional_centro_oeste
    ports:
      - "8883:8888"
    environment:
      - REGIAO=Centro_Oeste
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-centro-oeste:8888/healthcheck-regionais || exit 1
      interval: 25s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  regional-nordeste:
    depends_on:
      - kafka
    hostname: regional-nordeste
    image: imagem-base-simulador:0.0.1
    container_name: regional_nordeste
    ports:
      - "8884:8888"
    environment:
      - REGIAO=Nordeste
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-nordeste:8888/healthcheck-regionais || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  regional-norte:
    depends_on:
      - kafka
    hostname: regional-norte
    image: imagem-base-simulador:0.0.1
    container_name: regional_norte
    ports:
      - "8885:8888"
    environment:
      - REGIAO=Norte
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://regional-norte:8888/healthcheck-regionais || exit 1
      interval: 35s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  motor-analise-credito:
    depends_on:
      - kafka
    hostname: motor-analise-credito
    image: imagem-base-simulador:0.0.1
    container_name: motor_analise_credito
    ports:
      - "8889:8888"
    deploy:
      resources:
        limits:
          memory: 256MB
    restart: always
    healthcheck:
      test: curl -f http://motor-analise-credito:8888/healthcheck-motor || exit 1
      interval: 35s
      timeout: 10s
      retries: 5
    networks:
      - rede-analise-credito
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - rede-analise-credito
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      resources:
        limits:
          memory: 2G
  kafka:
    depends_on:
      - zookeeper
    image: docker.io/bitnami/kafka:3.4
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    networks:
      - rede-analise-credito
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes # Remove criptografia (sem SSL/TLS)
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true # Permite criar t√≥picos somente enviando mensagens
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
    deploy:
      resources:
        limits:
          memory: 2G
  nifi:
    depends_on:
      - kafka
    hostname: nifi
    image: apache/nifi:1.19.0
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME: nifi
      SINGLE_USER_CREDENTIALS_PASSWORD: mkYUQBJ9BBhc38RWa1p3E76xUR1rhYGR
    deploy:
      resources:
        limits:
          memory: 4G
    restart: on-failure
    healthcheck:
      test: wget -q --spider http://nifi:8443/nifi-api/system-diagnostics
      interval: 60s
      timeout: 40s
      retries: 3
    volumes:
      - nifi_database:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content:/opt/nifi/nifi-current/content_repository
      - nifi_provenance:/opt/nifi/nifi-current/provenance_repository
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_state:/opt/nifi/nifi-current/state
      - ./volumes/nifi/logs:/opt/nifi/nifi-current/logs
      - ./volumes/nifi/credentials:/opt/nifi/nifi-current/credentials
      - ./jdbc:/opt/nifi/nifi-current/jdbc
    networks:
      - rede-analise-credito
  nifi-registry:
    depends_on:
      - nifi
    hostname: nifi-registry
    container_name: nifi_registry
    image: apache/nifi-registry:1.19.0
    ports:
        - "18080:18080"
    environment:
        - LOG_LEVEL=INFO
        - NIFI_REGISTRY_DB_DIR=/opt/nifi-registry/nifi-registry-current/database
        - NIFI_REGISTRY_FLOW_PROVIDER=file
        - NIFI_REGISTRY_FLOW_STORAGE_DIR=/opt/nifi-registry/nifi-registry-current/flow_storage
    deploy:
      resources:
        limits:
          memory: 2G
    restart: on-failure
    healthcheck:
      test: wget -q --spider http://nifi-registry:18080/nifi-registry/
      interval: 60s
      timeout: 40s
      retries: 3
    volumes:
        - ./volumes/nifi_registry/database:/opt/nifi-registry/nifi-registry-current/database
        - ./volumes/nifi_registry/flow_storage:/opt/nifi-registry/nifi-registry-current/flow_storage
    networks:
        - rede-analise-credito
  sqlserver:
    depends_on:
      - kafka
    hostname: sqlserver
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - SA_PASSWORD=b90bee3b63bf33fa9901f92e
      - ACCEPT_EULA=Y
    deploy:
      resources:
        limits:
          memory: 2G
    restart: always
    volumes:
      - ./sql/initdb:/docker-entrypoint-initdb.d
      - ./volumes/sqlserver/sqlserver_data:/var/opt/mssql/data
      - ./volumes/sqlserver/sqlserver_log:/var/opt/mssql/log
      - ./volumes/sqlserver/sqlserver_secrets:/var/opt/mssql/secrets
    networks:
    - rede-analise-credito
  minio-s3:
    depends_on:
      - kafka
    hostname: minio-s3
    container_name: minio-s3
    image: bitnami/minio:2023
    ports: 
      - "9000:9000"
      - "9001:9001"
    environment: 
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=eO3RNPcKgWInlzPJuI08
    deploy:
      resources:
        limits:
          memory: 2G
    restart: always
    volumes: 
      - minio_data:/data
      - minio_certs:/certs
    networks:
      - rede-analise-credito

volumes:
  zookeeper_data:
  kafka_data:
  nifi_database:
  nifi_flowfile:
  nifi_content:
  nifi_provenance:
  nifi_state:
  nifi_conf:
  minio_data:
  minio_certs:

networks:
  rede-analise-credito:
    driver: bridge
